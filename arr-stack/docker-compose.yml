version: "3.9"

services:
  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    environment:
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/homarr/config:/app/data/config
      - ${CONFIG_ROOT}/homarr/icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - ${HOMARR_PORT}:7575
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/sonarr:/config
      - ${MEDIA_TV_DIR}:/tv
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - ${SONARR_PORT}:8989
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/radarr:/config
      - ${MEDIA_MOVIES_DIR}:/movies
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - ${RADARR_PORT}:7878
    restart: unless-stopped

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/lidarr:/config
      - ${MEDIA_MUSIC_DIR}:/music
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - ${LIDARR_PORT}:8686
    restart: unless-stopped

  readarr:
    image: ghcr.io/hotio/readarr:nightly
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/readarr:/config
      - ${MEDIA_BOOKS_DIR}:/books
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - ${READARR_PORT}:8787
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/prowlarr:/config
    ports:
      - ${PROWLARR_PORT}:9696
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/bazarr:/config
      - ${MEDIA_MOVIES_DIR}:/movies
      - ${MEDIA_TV_DIR}:/tv
    ports:
      - ${BAZARR_PORT}:6767
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=${QBITTORRENT_WEBUI_PORT}
    volumes:
      - ${CONFIG_ROOT}/qbittorrent:/config
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - ${QBITTORRENT_WEBUI_PORT}:8080
      - ${QBITTORRENT_BT_PORT}:6881
      - ${QBITTORRENT_BT_PORT}:6881/udp
    restart: unless-stopped

  emby:
    image: lscr.io/linuxserver/emby:latest
    container_name: emby
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/emby:/config
      - ${MEDIA_MOVIES_DIR}:/data/movies
      - ${MEDIA_TV_DIR}:/data/tvshows
    ports:
      - ${EMBY_HTTP_PORT}:8096
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/jellyfin:/config
      - ${MEDIA_MOVIES_DIR}:/data/movies
      - ${MEDIA_TV_DIR}:/data/tvshows
    ports:
      - ${JELLYFIN_HTTP_PORT}:8096
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - ${CONFIG_ROOT}/plex:/config
      - ${MEDIA_MOVIES_DIR}:/data/movies
      - ${MEDIA_TV_DIR}:/data/tvshows
    ports:
      - ${PLEX_HTTP_PORT}:32400
      - 32469:32469
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    restart: unless-stopped

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/overseerr:/app/config
    ports:
      - ${OVERSEERR_PORT}:5055
    restart: unless-stopped

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr:latest
    container_name: recyclarr
    environment:
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/recyclarr:/config
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PORTAINER_DATA}:/data
    ports:
      - ${PORTAINER_PORT}:9443
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      - TZ=${TZ}
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATIONS}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --include-restarting --schedule "0 30 4 * * *"
    restart: unless-stopped

  navidrome:
    image: deluan/navidrome:latest
    container_name: navidrome
    environment:
      - ND_LOGLEVEL=info
      - ND_SCANSCHEDULE=1h
      - ND_LASTFM_ENABLED=false
      - TZ=${TZ}
    volumes:
      - ${NAVIDROME_DATA}:/data
      - ${NAVIDROME_MUSIC}:/music
    ports:
      - ${NAVIDROME_PORT}:4533
    restart: unless-stopped

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${TAUTULLI_DATA}:/config
      - "${CONFIG_ROOT}/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro"
    ports:
      - ${TAUTULLI_PORT}:8181
    restart: unless-stopped

  jellystat:
    image: cyfershepard/jellystat:latest
    container_name: jellystat
    environment:
      - TZ=${TZ}
      - JELLYSTAT_DB_PATH=/app/data
    volumes:
      - ${JELLYSTAT_DATA}:/app/data
    ports:
      - ${JELLYSTAT_PORT}:3000
    restart: unless-stopped

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    environment:
      - TZ=${TZ}
    volumes:
      - ${AUDIOBOOKSHELF_CONFIG}:/config
      - ${AUDIOBOOKSHELF_METADATA}:/metadata
      - ${AUDIOBOOKSHELF_AUDIOBOOKS}:/audiobooks
    ports:
      - ${AUDIOBOOKSHELF_HTTP_PORT}:80
      - ${AUDIOBOOKSHELF_HTTPS_PORT}:443
    restart: unless-stopped

networks:
  default:
    name: arr-stack